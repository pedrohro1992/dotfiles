// Place your key bindings in this file to override the defaults
[
  // Git Open Projects
  {
    "key": "space o",
    "command": "gitProjectManager.OpenProjectNewWindow",
    "when": "!filesExplorerFocus && !inputFocus"
  },
  // QuickOpen
  {
    "key": "space f",
    "command": "workbench.action.quickOpen",
    "when": "!filesExplorerFocus && !inputFocus"
  },
  // Terminal KeyBindings
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "alt+c",
    "command": "editor.action.clipboardCopyAction",
    "when": "terminalFocus"
  },

  // Volta para o painel de edicao quando o terminal esta ativo
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },

  // Volta para o painel de edicao quando o diagnostico esta ativo
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "problemFocus"
  },

  // Split Screen Experience
  {
    "key": "ctrl+z",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+%",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // Better experience with find
  {
    "key": "ctrl+n",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "ctrl+p",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  //Explorer Keybindigs
  {
    "key": "space e",
    "command": "workbench.view.explorer",
    "when": "!filesExplorerFocus && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "f",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  }

  // Debuger
  // {
  //   "key": "space r",
  //   "command": "workbench.action.debug.run",
  //   "when": "debuggersAvailable && debugState != 'initializing'"
  // },
  // {
  //   "key": "space r",
  //   "command": "workbench.action.debug.start",
  //   "when": "debuggersAvailable && debugState == 'inactive'"
  // }
]
